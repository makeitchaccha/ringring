name: Docker Image CI

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: amd64
            platform: linux/amd64
            runner: ubuntu-latest
            cache_scope: amd64-builder
          - arch: arm64
            platform: linux/arm64/v8
            runner: ubuntu-24.04-arm
            cache_scope: arm64-builder

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix=

      - name: Build and Push ${{ matrix.arch }} Image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: true
          cache-from: type=gha,scope=${{ matrix.cache_scope }}
          cache-to: type=gha,mode=max,scope=${{ matrix.cache_scope }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  create-manifest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix=

      - name: Create and Push Manifest
        run: |
          # The tags need to be parsed from the meta action output
          # This script assumes the tags are newline-separated from docker/metadata-action
          # And it picks the first tag to be the manifest tag
          TAGS="${{ steps.meta.outputs.tags }}"
          echo "All tags generated: ${TAGS}"
          # Pick the first tag as the main manifest tag
          MANIFEST_TAG=$(echo "$TAGS" | head -n 1)
          echo "Selected manifest tag: ${MANIFEST_TAG}"

          # Ensure the tag is non-empty before proceeding
          if [ -z "$MANIFEST_TAG" ]; then
            echo "Error: No manifest tag generated."
            exit 1
          fi

          # Use buildx imagetools to create and push the manifest list
          # It combines the images already pushed by the individual build jobs
          docker buildx imagetools create \
            --tag "${MANIFEST_TAG}" \
            ghcr.io/${{ github.repository }}@sha256:${{ needs.build.outputs.amd64_digest }} \
            ghcr.io/${{ github.repository }}@sha256:${{ needs.build.outputs.arm64_digest }}
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled # Required for imagetools